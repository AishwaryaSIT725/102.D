name: CI (testing) - Test, Build, Push to ACR

on:
  push:
    branches: [ "testing" ]

# ACR login server like: sit722acr.azurecr.io
env:
  ACR: ${{ secrets.ACR_LOGIN_SERVER }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - backend/customer_service
          - backend/order_service
          - backend/product_service
          - frontend
    steps:
      - uses: actions/checkout@v4

      # --- Backend testing (Python) ---
      - name: Setup Python
        if: startsWith(matrix.service, 'backend/')
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps & run tests
        if: startsWith(matrix.service, 'backend/')
        working-directory: ${{ matrix.service }}
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure test tooling & httpx for FastAPI TestClient
          pip install pytest httpx
          # Run tests only if a test file exists
          if ls tests/*.py >/dev/null 2>&1; then
            pytest -q
          else
            echo "No tests found; skipping."
          fi

      # --- Frontend quick check (no tests provided) ---
      - name: Frontend quick check
        if: matrix.service == 'frontend'
        run: echo "No tests for frontend; continuing."

  build_and_push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - path: backend/customer_service
            image: customer_service
          - path: backend/order_service
            image: order_service
          - path: backend/product_service
            image: product_service
          - path: frontend
            image: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Log in to ACR (trim the registry name in bash, not in YAML)
      - name: az acr login
        shell: bash
        run: |
          # ACR is something like "sit722acr.azurecr.io" -> we need "sit722acr"
          ACR_NAME="${ACR%%.*}"
          echo "Logging into ACR: $ACR_NAME"
          az acr login --name "$ACR_NAME"

      - name: Build & Push ${{ matrix.image }}
        shell: bash
        run: |
          # Use the full login server for tagging (e.g., sit722acr.azurecr.io/image)
          IMAGE="${ACR}/${{ matrix.image }}"
          TAG_SHA="testing-${{ github.sha }}"
          TAG_LATEST="testing-latest"

          echo "Building ${IMAGE}:${TAG_SHA} from ${{ matrix.path }}"
          docker build -t "$IMAGE:$TAG_SHA" -t "$IMAGE:$TAG_LATEST" "${{ matrix.path }}"
          docker push "$IMAGE:$TAG_SHA"
          docker push "$IMAGE:$TAG_LATEST"
